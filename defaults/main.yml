---
# defaults file for while_true_do.srv_cockpit

## Package Management
# Defaults are based on Fedora Linux

# Cockpit System Packages
# Most likely needed for all systems
# You should consider to have a look at:
# - while_true_do.sys_kdump
# - while_true_do.sys_selinux
# - while_true_do.sys_tuned
wtd_srv_cockpit_sys_package:
  - cockpit-networkmanager
  - cockpit-storaged
  - cockpit-sosreport
  - cockpit-system
  - cockpit-kdump
  - cockpit-selinux
# State can be present|latest|absent|unmanaged
wtd_srv_cockpit_sys_package_state: "present"

# Cockpit Packagekit Integration
wtd_srv_cockpit_pk_package:
  - cockpit-packagekit
# State can be present|latest|absent|unmanaged
wtd_srv_cockpit_pk_package_state: "present"

# Cockpit PCP Integration
# You should consider to look at while_true_do.sys_pcp
wtd_srv_cockpit_pcp_package:
  - cockpit-pcp
# State can be present|latest|absent|unmanaged
wtd_srv_cockpit_pcp_package_state: "present"

# Cockpit Docker Integration
# You should consider to look at while_true_do.srv_docker
wtd_srv_cockpit_docker_package:
  - cockpit-docker
# State can be present|latest|absent|unmanaged
wtd_srv_cockpit_docker_package_state: "absent"

# Cockpit Podman Integration
# You should consider to look at while_true_do.srv_podman
wtd_srv_cockpit_podman_package:
  - cockpit-podman
# State can be present|latest|absent|unmanaged
wtd_srv_cockpit_podman_package_state: "absent"

# Cockpit libvirt Integration
# You should consider to look at while_true_do.srv_kvm
wtd_srv_cockpit_machines_package:
  - cockpit-machines
# State can be present|latest|absent|unmanaged
wtd_srv_cockpit_machines_package_state: "absent"

## Cockpit Web Management
# Only needed, if you want to access the server directly via web ui

# Cockpit Web Package Management
wtd_srv_cockpit_web_package:
  - cockpit
  - cockpit-ws
# State can be present|latest|absent|unmanaged
wtd_srv_cockpit_web_package_state: "absent"

# Cockpit Web Dashboard for multiple servers
wtd_srv_cockpit_web_dash_package:
  - cockpit-dashboard
# State can be present|latest|absent|unmanaged
wtd_srv_cockpit_web_dash_package_state: "absent"

## Cockpit Web Service Management
wtd_srv_cockpit_web_service: "cockpit.socket"
# State can be started|stopped
wtd_srv_cockpit_web_service_state: "started"
wtd_srv_cockpit_web_service_enabled: true

## Cockpit Web Firewalld Management
wtd_srv_cockpit_web_fw_mgmt: true
wtd_srv_cockpit_web_fw_service: "cockpit"
# State can be enabled|disabled
wtd_srv_cockpit_web_fw_service_state: "enabled"
# Zone can be according to defined zones on your machine.
wtd_srv_cockpit_web_fw_service_zone: "public"

## Cockpit Web Configuration Management
# See here: http://cockpit-project.org/guide/latest/cockpit.conf.5.html
wtd_srv_cockpit_web_conf_Origins: ""
wtd_srv_cockpit_web_conf_ProtocolHeader: ""
wtd_srv_cockpit_web_conf_LoginTo: ""
wtd_srv_cockpit_web_conf_LoginTitle: ""
wtd_srv_cockpit_web_conf_RequireHost: ""
wtd_srv_cockpit_web_conf_MaxStartups: "3"
wtd_srv_cockpit_web_conf_AllowUnencrypted: ""
wtd_srv_cockpit_web_conf_UrlRoot: ""
# See here: http://cockpit-project.org/guide/latest/cockpit-ws.8.html
wtd_srv_cockpit_web_conf_cert: ""

# wtd_srv_cockpit_web_conf_clients:
#   - name: "host1.example.com"   # ip|fqdn
#     color: "rgb(0, 0, 255)"     # defaults to random color
#     port: "22"                  # defaults to 22
